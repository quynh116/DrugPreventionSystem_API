// <auto-generated />
using System;
using DrugPreventionSystem.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrugPreventionSystem.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250612054553_AddSurveyEntities")]
    partial class AddSurveyEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Consultant", b =>
                {
                    b.Property<Guid>("ConsultantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("consultant_id");

                    b.Property<string>("Bio")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("bio");

                    b.Property<decimal?>("ConsultationFee")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("consultation_fee");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("is_available");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("license_number");

                    b.Property<string>("Qualifications")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("qualifications");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("rating");

                    b.Property<string>("Specialization")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("specialization");

                    b.Property<int>("TotalConsultations")
                        .HasColumnType("int")
                        .HasColumnName("total_consultations");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<string>("WorkingHours")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("working_hours");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int")
                        .HasColumnName("years_of_experience");

                    b.HasKey("ConsultantId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("consultants");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("RoleId");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 364, DateTimeKind.Local).AddTicks(5990),
                            Description = "System Administrator",
                            IsActive = true,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 364, DateTimeKind.Local).AddTicks(6003),
                            Description = "System Manager",
                            IsActive = true,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 364, DateTimeKind.Local).AddTicks(6005),
                            Description = "Staff Member",
                            IsActive = true,
                            RoleName = "Staff"
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 364, DateTimeKind.Local).AddTicks(6006),
                            Description = "Professional Consultant",
                            IsActive = true,
                            RoleName = "Consultant"
                        },
                        new
                        {
                            RoleId = 5,
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 364, DateTimeKind.Local).AddTicks(6007),
                            Description = "Registered Member",
                            IsActive = true,
                            RoleName = "Member"
                        });
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Survey", b =>
                {
                    b.Property<Guid>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("SurveyId");

                    b.ToTable("surveys");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyOption", b =>
                {
                    b.Property<Guid>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("option_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("option_text");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<int?>("ScoreValue")
                        .HasColumnType("int")
                        .HasColumnName("score_value");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("SurveyOptions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("question_text");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("question_type");

                    b.Property<int>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("QuestionId");

                    b.HasIndex("SurveyId");

                    b.ToTable("survey_questions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit")
                        .HasColumnName("email_verified");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_login");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("c58f63b3-6b28-4b8b-a599-8482aeada58b"),
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 514, DateTimeKind.Local).AddTicks(2803),
                            Email = "admin@example.com",
                            EmailVerified = true,
                            IsActive = true,
                            PasswordHash = "$2a$11$y9Y6Zpx5AbJ0psfr/rb4fuyRuEtNDk8DF/ovzq1O.fYPap/HS8B/K",
                            RoleId = 1,
                            Username = "admin_user"
                        },
                        new
                        {
                            UserId = new Guid("1cd03061-7c79-45aa-9538-a55c99c1cd1d"),
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 514, DateTimeKind.Local).AddTicks(2808),
                            Email = "manager@example.com",
                            EmailVerified = true,
                            IsActive = true,
                            PasswordHash = "$2a$11$y9Y6Zpx5AbJ0psfr/rb4fuyRuEtNDk8DF/ovzq1O.fYPap/HS8B/K",
                            RoleId = 2,
                            Username = "manager_user"
                        },
                        new
                        {
                            UserId = new Guid("88dfbcab-e0d0-4ae1-9a01-8a5069e04b07"),
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 514, DateTimeKind.Local).AddTicks(2811),
                            Email = "staff@example.com",
                            EmailVerified = true,
                            IsActive = true,
                            PasswordHash = "$2a$11$y9Y6Zpx5AbJ0psfr/rb4fuyRuEtNDk8DF/ovzq1O.fYPap/HS8B/K",
                            RoleId = 3,
                            Username = "staff_user"
                        },
                        new
                        {
                            UserId = new Guid("9bc77185-699b-475a-9cc3-a806d7c4bfd7"),
                            CreatedAt = new DateTime(2025, 6, 12, 12, 45, 52, 514, DateTimeKind.Local).AddTicks(2814),
                            Email = "consultant@example.com",
                            EmailVerified = true,
                            IsActive = true,
                            PasswordHash = "$2a$11$y9Y6Zpx5AbJ0psfr/rb4fuyRuEtNDk8DF/ovzq1O.fYPap/HS8B/K",
                            RoleId = 4,
                            Username = "consultant_user"
                        });
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserProfile", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("profile_id");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("address");

                    b.Property<string>("AgeGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("age_group");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("avatar_url");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EducationLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("education_level");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("occupation");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("user_profiles");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyAnswer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("answer_id");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("answer_text");

                    b.Property<DateTime>("AnsweredAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("answered_at");

                    b.Property<Guid?>("OptionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("option_id");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<Guid>("ResponseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("response_id");

                    b.HasKey("AnswerId");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ResponseId");

                    b.ToTable("user_survey_answers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", b =>
                {
                    b.Property<Guid>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("response_id");

                    b.Property<string>("RecommendedAction")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("recommended_action");

                    b.Property<string>("RiskLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("risk_level");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("taken_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ResponseId");

                    b.HasIndex("SurveyId");

                    b.HasIndex("UserId");

                    b.ToTable("user_survey_responses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Consultant", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithOne("Consultant")
                        .HasForeignKey("DrugPreventionSystem.DataAccess.Models.Consultant", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyOption", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", "SurveyQuestion")
                        .WithMany("SurveyOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Survey", "Survey")
                        .WithMany("SurveyQuestions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.User", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserProfile", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("DrugPreventionSystem.DataAccess.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyAnswer", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.SurveyOption", "SurveyOption")
                        .WithMany("UserSurveyAnswers")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", "SurveyQuestion")
                        .WithMany("UserSurveyAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", "UserSurveyResponse")
                        .WithMany("UserSurveyAnswers")
                        .HasForeignKey("ResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyOption");

                    b.Navigation("SurveyQuestion");

                    b.Navigation("UserSurveyResponse");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Survey", "Survey")
                        .WithMany("UserSurveyResponses")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("UserSurveyResponses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Survey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Survey", b =>
                {
                    b.Navigation("SurveyQuestions");

                    b.Navigation("UserSurveyResponses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyOption", b =>
                {
                    b.Navigation("UserSurveyAnswers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", b =>
                {
                    b.Navigation("SurveyOptions");

                    b.Navigation("UserSurveyAnswers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.User", b =>
                {
                    b.Navigation("Consultant");

                    b.Navigation("UserProfile");

                    b.Navigation("UserSurveyResponses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", b =>
                {
                    b.Navigation("UserSurveyAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
