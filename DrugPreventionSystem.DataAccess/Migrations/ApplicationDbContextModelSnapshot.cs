// <auto-generated />
using System;
using DrugPreventionSystem.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrugPreventionSystem.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Appointment", b =>
                {
                    b.Property<Guid>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("appointment_id");

                    b.Property<Guid>("ConsultantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("consultant_id");

                    b.Property<string>("ConsultationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("consultation_type");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("HasPreviousConsultation")
                        .HasColumnType("bit")
                        .HasColumnName("has_previous_consultation");

                    b.Property<string>("MeetUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("meet_url");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("ReasonForConsultation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reason_for_consultation");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<Guid>("TimeSlotId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("time_slot_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("AppointmentId");

                    b.HasIndex("ConsultantId");

                    b.HasIndex("TimeSlotId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("appointments");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("category_id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Excerpt")
                        .HasColumnType("text")
                        .HasColumnName("excerpt");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("published_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tags");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("thumbnail_url");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<int>("ViewsCount")
                        .HasColumnType("int")
                        .HasColumnName("views_count");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("blogs");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.BlogCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("blog_categories");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.CommunityProgram", b =>
                {
                    b.Property<Guid>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("program_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int")
                        .HasColumnName("max_participants");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<Guid?>("SurveyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<string>("TargetAudience")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("target_audience");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("ProgramId");

                    b.HasIndex("SurveyId");

                    b.ToTable("community_programs");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Consultant", b =>
                {
                    b.Property<Guid>("ConsultantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("consultant_id");

                    b.Property<string>("Bio")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("bio");

                    b.Property<decimal?>("ConsultationFee")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("consultation_fee");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("is_available");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("license_number");

                    b.Property<string>("Qualifications")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("qualifications");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("rating");

                    b.Property<string>("Specialization")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("specialization");

                    b.Property<int>("TotalConsultations")
                        .HasColumnType("int")
                        .HasColumnName("total_consultations");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<string>("WorkingHours")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("working_hours");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int")
                        .HasColumnName("years_of_experience");

                    b.HasKey("ConsultantId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("consultants");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("course_id");

                    b.Property<string>("AgeGroup")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("age_group");

                    b.Property<bool>("CertificateAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("certificate_available");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<Guid>("InstructorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("instructor_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("LessonCount")
                        .HasColumnType("int")
                        .HasColumnName("lesson_count");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requirements");

                    b.Property<int?>("StudentCount")
                        .HasColumnType("int")
                        .HasColumnName("student_count");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("thumbnail_url");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("title");

                    b.Property<int?>("TotalDuration")
                        .HasColumnType("int")
                        .HasColumnName("total_duration");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.CourseCertificate", b =>
                {
                    b.Property<Guid>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("certificate_id");

                    b.Property<string>("CertificateUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("certificate_url");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("issued_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("CertificateId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("course_certificates");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.CourseWeek", b =>
                {
                    b.Property<Guid>("WeekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("week_id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("course_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int")
                        .HasColumnName("week_number");

                    b.HasKey("WeekId");

                    b.HasIndex("CourseId");

                    b.ToTable("course_weeks");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Instructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("instructor_id");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bio");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("int")
                        .HasColumnName("experience_years");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("ProfileImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("profile_image_url");

                    b.HasKey("InstructorId");

                    b.ToTable("instructors");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Lesson", b =>
                {
                    b.Property<Guid>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lesson_id");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int")
                        .HasColumnName("duration_minutes");

                    b.Property<bool>("HasPractice")
                        .HasColumnType("bit")
                        .HasColumnName("has_practice");

                    b.Property<bool>("HasQuiz")
                        .HasColumnType("bit")
                        .HasColumnName("has_quiz");

                    b.Property<int>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<Guid>("WeekId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("week_id");

                    b.HasKey("LessonId");

                    b.HasIndex("WeekId");

                    b.ToTable("lessons");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.LessonResource", b =>
                {
                    b.Property<Guid>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("resource_id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lesson_id");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("resource_type");

                    b.Property<string>("ResourceUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("resource_url");

                    b.HasKey("ResourceId");

                    b.HasIndex("LessonId");

                    b.ToTable("lesson_resources");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.PracticeExercise", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("exercise_id");

                    b.Property<string>("AttachmentUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("attachment_url");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("instruction");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lesson_id");

                    b.HasKey("ExerciseId");

                    b.HasIndex("LessonId");

                    b.ToTable("practice_exercises");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramFeedback", b =>
                {
                    b.Property<Guid>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("feedback_id");

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<Guid>("ProgramId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("program_id");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("submitted_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("FeedbackId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("program_feedback");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramParticipant", b =>
                {
                    b.Property<Guid>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("participant_id");

                    b.Property<bool>("Attended")
                        .HasColumnType("bit")
                        .HasColumnName("attended");

                    b.Property<bool>("FeedbackSubmitted")
                        .HasColumnType("bit")
                        .HasColumnName("feedback_submitted");

                    b.Property<Guid>("ProgramId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("program_id");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("registered_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ParticipantId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("program_participants");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurvey", b =>
                {
                    b.Property<Guid>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("SurveyId");

                    b.ToTable("program_surveys");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyAnswer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("answer_id");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("answer_text");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<Guid>("ResponseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("response_id");

                    b.Property<Guid?>("SelectedOptionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("selected_option_id");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ResponseId");

                    b.HasIndex("SelectedOptionId");

                    b.ToTable("program_survey_answers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyAnswerOption", b =>
                {
                    b.Property<Guid>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("option_id");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("option_text");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("program_survey_answer_options");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyQuestion", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("question_text");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("question_type");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.HasKey("QuestionId");

                    b.HasIndex("SurveyId");

                    b.ToTable("program_survey_questions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyResponse", b =>
                {
                    b.Property<Guid>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("response_id");

                    b.Property<Guid>("ProgramId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("program_id");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("submitted_at");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ResponseId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("SurveyId");

                    b.HasIndex("UserId");

                    b.ToTable("program_survey_responses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Quiz", b =>
                {
                    b.Property<Guid>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("quiz_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lesson_id");

                    b.Property<float?>("PassingScore")
                        .HasColumnType("real")
                        .HasColumnName("passing_score");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<int?>("TotalQuestions")
                        .HasColumnType("int")
                        .HasColumnName("total_questions");

                    b.HasKey("QuizId");

                    b.HasIndex("LessonId")
                        .IsUnique();

                    b.ToTable("quizzes");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.QuizOption", b =>
                {
                    b.Property<Guid>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("option_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit")
                        .HasColumnName("is_correct");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("option_text");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("quiz_options");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.QuizQuestion", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("question_text");

                    b.Property<string>("QuestionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("question_type");

                    b.Property<Guid>("QuizId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("quiz_id");

                    b.Property<int>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("quiz_questions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("RoleId");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 711, DateTimeKind.Local).AddTicks(3788),
                            Description = "System Administrator",
                            IsActive = true,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 711, DateTimeKind.Local).AddTicks(3805),
                            Description = "System Manager",
                            IsActive = true,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 711, DateTimeKind.Local).AddTicks(3807),
                            Description = "Staff Member",
                            IsActive = true,
                            RoleName = "Staff"
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 711, DateTimeKind.Local).AddTicks(3808),
                            Description = "Professional Consultant",
                            IsActive = true,
                            RoleName = "Consultant"
                        },
                        new
                        {
                            RoleId = 5,
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 711, DateTimeKind.Local).AddTicks(3809),
                            Description = "Registered Member",
                            IsActive = true,
                            RoleName = "Member"
                        });
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Survey", b =>
                {
                    b.Property<Guid>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("EstimatedDuration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("estimated_duration");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("TargetAudience")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("target_audience");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("SurveyId");

                    b.ToTable("surveys");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyCourseRecommendation", b =>
                {
                    b.Property<Guid>("RecommendationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recommendation_id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("RecommendedActionKeyword")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("recommended_action_keyword");

                    b.Property<string>("RiskLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("risk_level");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("RecommendationId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SurveyId");

                    b.ToTable("survey_course_recommendations");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyOption", b =>
                {
                    b.Property<Guid>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("option_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("option_text");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<int?>("ScoreValue")
                        .HasColumnType("int")
                        .HasColumnName("score_value");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("SurveyOptions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("question_text");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("question_type");

                    b.Property<int>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("QuestionId");

                    b.HasIndex("SurveyId");

                    b.ToTable("survey_questions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.TimeSlot", b =>
                {
                    b.Property<Guid>("TimeSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("time_slot_id");

                    b.Property<Guid>("ConsultantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("consultant_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<DateTime>("SlotDate")
                        .HasColumnType("date")
                        .HasColumnName("slot_date");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("TimeSlotId");

                    b.HasIndex("ConsultantId", "SlotDate", "StartTime")
                        .IsUnique();

                    b.ToTable("time_slots");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit")
                        .HasColumnName("email_verified");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_login");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("2bd597dd-87da-46d1-afd6-fb9f0d3f164b"),
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 843, DateTimeKind.Local).AddTicks(8730),
                            Email = "admin@example.com",
                            EmailVerified = true,
                            IsActive = true,
                            PasswordHash = "$2a$11$0RPQOs.f5HRmOIS47a1Q3.dItw6WsZdD5vQPS5tv3uGxlqgdDfisO",
                            RoleId = 1,
                            Username = "admin_user"
                        },
                        new
                        {
                            UserId = new Guid("ee824d09-2c82-48f1-b491-bf38a9ac97a3"),
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 843, DateTimeKind.Local).AddTicks(8745),
                            Email = "manager@example.com",
                            EmailVerified = true,
                            IsActive = true,
                            PasswordHash = "$2a$11$0RPQOs.f5HRmOIS47a1Q3.dItw6WsZdD5vQPS5tv3uGxlqgdDfisO",
                            RoleId = 2,
                            Username = "manager_user"
                        },
                        new
                        {
                            UserId = new Guid("951ebd31-e6da-49e7-b576-8b7b23c19c3a"),
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 843, DateTimeKind.Local).AddTicks(8751),
                            Email = "staff@example.com",
                            EmailVerified = true,
                            IsActive = true,
                            PasswordHash = "$2a$11$0RPQOs.f5HRmOIS47a1Q3.dItw6WsZdD5vQPS5tv3uGxlqgdDfisO",
                            RoleId = 3,
                            Username = "staff_user"
                        },
                        new
                        {
                            UserId = new Guid("121d18c7-a22c-463f-a212-6ab4a9118dc6"),
                            CreatedAt = new DateTime(2025, 7, 8, 16, 23, 34, 843, DateTimeKind.Local).AddTicks(8756),
                            Email = "consultant@example.com",
                            EmailVerified = true,
                            IsActive = true,
                            PasswordHash = "$2a$11$0RPQOs.f5HRmOIS47a1Q3.dItw6WsZdD5vQPS5tv3uGxlqgdDfisO",
                            RoleId = 4,
                            Username = "consultant_user"
                        });
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserCourseEnrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("completed_at");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("enrolled_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId", "CourseId")
                        .IsUnique();

                    b.ToTable("user_course_enrollments");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserLessonProgress", b =>
                {
                    b.Property<Guid>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("progress_id");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("completed_at");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lesson_id");

                    b.Property<bool>("Passed")
                        .HasColumnType("bit")
                        .HasColumnName("passed");

                    b.Property<float?>("QuizScore")
                        .HasColumnType("real")
                        .HasColumnName("quiz_score");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ProgressId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("user_lesson_progress");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserModuleQuizResult", b =>
                {
                    b.Property<Guid>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("result_id");

                    b.Property<int>("CorrectCount")
                        .HasColumnType("int")
                        .HasColumnName("correct_count");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lesson_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("taken_at");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("int")
                        .HasColumnName("total_questions");

                    b.Property<float>("TotalScore")
                        .HasColumnType("real")
                        .HasColumnName("total_score");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ResultId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("user_module_quiz_result");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserProfile", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("profile_id");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("address");

                    b.Property<string>("AgeGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("age_group");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("avatar_url");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EducationLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("education_level");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("occupation");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("user_profiles");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserQuizAnswer", b =>
                {
                    b.Property<Guid>("UserQuizAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_quiz_answer_id");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("answer_text");

                    b.Property<DateTime>("AnsweredAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("answered_at");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<Guid?>("SelectedOptionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("selected_option_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("UserQuizAnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SelectedOptionId");

                    b.HasIndex("UserId");

                    b.ToTable("user_quiz_answers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserResponseCourseRecommendation", b =>
                {
                    b.Property<Guid>("UserRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_rec_id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("RecommendedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recommended_at");

                    b.Property<Guid>("ResponseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("response_id");

                    b.HasKey("UserRecId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ResponseId");

                    b.ToTable("user_response_course_recommendations");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyAnswer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("answer_id");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("answer_text");

                    b.Property<DateTime>("AnsweredAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("answered_at");

                    b.Property<Guid?>("OptionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("option_id");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("question_id");

                    b.Property<Guid>("ResponseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("response_id");

                    b.HasKey("AnswerId");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ResponseId");

                    b.ToTable("user_survey_answers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", b =>
                {
                    b.Property<Guid>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("response_id");

                    b.Property<string>("RecommendedAction")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("recommended_action");

                    b.Property<string>("RiskLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("risk_level");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("survey_id");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("taken_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ResponseId");

                    b.HasIndex("SurveyId");

                    b.HasIndex("UserId");

                    b.ToTable("user_survey_responses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Appointment", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Consultant", "Consultant")
                        .WithMany("Appointments")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.TimeSlot", "TimeSlot")
                        .WithOne("Appointment")
                        .HasForeignKey("DrugPreventionSystem.DataAccess.Models.Appointment", "TimeSlotId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("Appointments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Consultant");

                    b.Navigation("TimeSlot");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Blog", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.BlogCategory", "Category")
                        .WithMany("Blogs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("Blogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.CommunityProgram", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.ProgramSurvey", "ProgramSurvey")
                        .WithMany("Programs")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProgramSurvey");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Consultant", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithOne("Consultant")
                        .HasForeignKey("DrugPreventionSystem.DataAccess.Models.Consultant", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Course", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.CourseCertificate", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Course", "Course")
                        .WithMany("CourseCertificates")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("CourseCertificates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.CourseWeek", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Course", "Course")
                        .WithMany("CourseWeeks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Lesson", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.CourseWeek", "CourseWeek")
                        .WithMany("Lessons")
                        .HasForeignKey("WeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseWeek");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.LessonResource", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Lesson", "Lesson")
                        .WithMany("LessonResources")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.PracticeExercise", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Lesson", "Lesson")
                        .WithMany("PracticeExercises")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramFeedback", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.CommunityProgram", "CommunityProgram")
                        .WithMany("ProgramFeedbacks")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("ProgramFeedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommunityProgram");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramParticipant", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.CommunityProgram", "CommunityProgram")
                        .WithMany("ProgramParticipants")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("ProgramParticipants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommunityProgram");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyAnswer", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.ProgramSurveyQuestion", "ProgramSurveyQuestion")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.ProgramSurveyResponse", "ProgramSurveyResponse")
                        .WithMany("Answers")
                        .HasForeignKey("ResponseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.ProgramSurveyAnswerOption", "ProgramSurveyAnswerOption")
                        .WithMany()
                        .HasForeignKey("SelectedOptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProgramSurveyAnswerOption");

                    b.Navigation("ProgramSurveyQuestion");

                    b.Navigation("ProgramSurveyResponse");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyAnswerOption", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.ProgramSurveyQuestion", "ProgramSurveyQuestion")
                        .WithMany("AnswerOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProgramSurveyQuestion");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyQuestion", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.ProgramSurvey", "ProgramSurvey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProgramSurvey");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyResponse", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.CommunityProgram", "CommunityProgram")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.ProgramSurvey", "ProgramSurvey")
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("ProgramSurveyResponses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunityProgram");

                    b.Navigation("ProgramSurvey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Quiz", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Lesson", "Lesson")
                        .WithOne("Quiz")
                        .HasForeignKey("DrugPreventionSystem.DataAccess.Models.Quiz", "LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.QuizOption", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.QuizQuestion", "QuizQuestion")
                        .WithMany("QuizOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizQuestion");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.QuizQuestion", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Quiz", "Quiz")
                        .WithMany("QuizQuestions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyCourseRecommendation", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Course", "Course")
                        .WithMany("SurveyCourseRecommendations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Survey", "Survey")
                        .WithMany("SurveyCourseRecommendations")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyOption", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", "SurveyQuestion")
                        .WithMany("SurveyOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Survey", "Survey")
                        .WithMany("SurveyQuestions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.TimeSlot", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Consultant", "Consultant")
                        .WithMany("TimeSlots")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Consultant");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.User", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserCourseEnrollment", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Course", "Course")
                        .WithMany("UserCourseEnrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("UserCourseEnrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserLessonProgress", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Lesson", "Lesson")
                        .WithMany("UserLessonProgresses")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("UserLessonProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserModuleQuizResult", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Lesson", "Lesson")
                        .WithMany("UserModuleQuizResults")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("UserModuleQuizResults")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserProfile", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("DrugPreventionSystem.DataAccess.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserQuizAnswer", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.QuizQuestion", "QuizQuestion")
                        .WithMany("UserQuizAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.QuizOption", "SelectedOption")
                        .WithMany("UserQuizAnswers")
                        .HasForeignKey("SelectedOptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("UserQuizAnswers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("QuizQuestion");

                    b.Navigation("SelectedOption");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserResponseCourseRecommendation", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Course", "Course")
                        .WithMany("UserResponseCourseRecommendations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", "UserSurveyResponse")
                        .WithMany("UserResponseCourseRecommendations")
                        .HasForeignKey("ResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("UserSurveyResponse");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyAnswer", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.SurveyOption", "SurveyOption")
                        .WithMany("UserSurveyAnswers")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", "SurveyQuestion")
                        .WithMany("UserSurveyAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", "UserSurveyResponse")
                        .WithMany("UserSurveyAnswers")
                        .HasForeignKey("ResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyOption");

                    b.Navigation("SurveyQuestion");

                    b.Navigation("UserSurveyResponse");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", b =>
                {
                    b.HasOne("DrugPreventionSystem.DataAccess.Models.Survey", "Survey")
                        .WithMany("UserSurveyResponses")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrugPreventionSystem.DataAccess.Models.User", "User")
                        .WithMany("UserSurveyResponses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Survey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.BlogCategory", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.CommunityProgram", b =>
                {
                    b.Navigation("ProgramFeedbacks");

                    b.Navigation("ProgramParticipants");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Consultant", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Course", b =>
                {
                    b.Navigation("CourseCertificates");

                    b.Navigation("CourseWeeks");

                    b.Navigation("SurveyCourseRecommendations");

                    b.Navigation("UserCourseEnrollments");

                    b.Navigation("UserResponseCourseRecommendations");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.CourseWeek", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Instructor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Lesson", b =>
                {
                    b.Navigation("LessonResources");

                    b.Navigation("PracticeExercises");

                    b.Navigation("Quiz");

                    b.Navigation("UserLessonProgresses");

                    b.Navigation("UserModuleQuizResults");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurvey", b =>
                {
                    b.Navigation("Programs");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyQuestion", b =>
                {
                    b.Navigation("AnswerOptions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.ProgramSurveyResponse", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Quiz", b =>
                {
                    b.Navigation("QuizQuestions");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.QuizOption", b =>
                {
                    b.Navigation("UserQuizAnswers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.QuizQuestion", b =>
                {
                    b.Navigation("QuizOptions");

                    b.Navigation("UserQuizAnswers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.Survey", b =>
                {
                    b.Navigation("SurveyCourseRecommendations");

                    b.Navigation("SurveyQuestions");

                    b.Navigation("UserSurveyResponses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyOption", b =>
                {
                    b.Navigation("UserSurveyAnswers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.SurveyQuestion", b =>
                {
                    b.Navigation("SurveyOptions");

                    b.Navigation("UserSurveyAnswers");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.TimeSlot", b =>
                {
                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.User", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Blogs");

                    b.Navigation("Consultant");

                    b.Navigation("CourseCertificates");

                    b.Navigation("ProgramFeedbacks");

                    b.Navigation("ProgramParticipants");

                    b.Navigation("ProgramSurveyResponses");

                    b.Navigation("UserCourseEnrollments");

                    b.Navigation("UserLessonProgresses");

                    b.Navigation("UserModuleQuizResults");

                    b.Navigation("UserProfile");

                    b.Navigation("UserQuizAnswers");

                    b.Navigation("UserSurveyResponses");
                });

            modelBuilder.Entity("DrugPreventionSystem.DataAccess.Models.UserSurveyResponse", b =>
                {
                    b.Navigation("UserResponseCourseRecommendations");

                    b.Navigation("UserSurveyAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
